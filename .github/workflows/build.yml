name: Continuous Integration

on: [push]

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish dev-environment to github package registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: feuertiger/feuertiger-build-environment
          cache_froms: "feuertiger/feuertiger-build-environment:latest-${{ github.head_ref }}"
          tags: "latest-${{ github.head_ref }}"
          dockerfile: .build-env.Dockerfile

  Format:
    needs: Prepare
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    container: "feuertiger/feuertiger-build-environment:latest-${{ github.head_ref }}"
    steps:
      - uses: actions/checkout@master
      - name: Prepare
        run: |
          echo ${{ github.head_ref }}
          git config --global user.name 'feuertiger'
          git config --global user.email 'feuertiger@users.noreply.github.com'
      - name: Format & Fix
        run: |
          yarn linkdist
          yarn format
          yarn lint || true
          git diff-index --quiet HEAD || git commit -am "format & fix" && git push

  Test:
    needs: Prepare
    runs-on: ubuntu-latest
    container: "feuertiger/feuertiger-build-environment:latest-${{ github.head_ref }}"
    steps:
      - uses: actions/checkout@master
      - name: Build
        run: |
          echo ${{ github.head_ref }}
          yarn build
          yarn linkdist
      - name: Test
        run: |
          yarn lint
          yarn test

  Publish:
    needs: Test
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    container: "feuertiger/feuertiger-build-environment:latest-${{ github.head_ref }}"
    steps:
      - uses: actions/checkout@master
        with:
          token: ${{ secrets.PRIVATE_TOKEN }}
      - name: Prepare
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          git config --global user.name 'feuertiger'
          git config --global user.email 'feuertiger@users.noreply.github.com'
      - name: Publish
        run: |
          yarn build
          yarn run publish

  Deploy:
    needs: Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    container: "feuertiger/feuertiger-build-environment:latest-${{ github.head_ref }}"
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Firebase
        working-directory: ./deployments/firebase/functions
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_SECRETS_TYPE: ${{ secrets.FIREBASE_SECRETS_TYPE }}
          FIREBASE_SECRETS_PROJECT_ID: ${{ secrets.FIREBASE_SECRETS_PROJECT_ID }}
          FIREBASE_SECRETS_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_SECRETS_PRIVATE_KEY_ID }}
          FIREBASE_SECRETS_PRIVATE_KEY: ${{ secrets.FIREBASE_SECRETS_PRIVATE_KEY }}
          FIREBASE_SECRETS_CLIENT_EMAIL: ${{ secrets.FIREBASE_SECRETS_CLIENT_EMAIL }}
          FIREBASE_SECRETS_CLIENT_ID: ${{ secrets.FIREBASE_SECRETS_CLIENT_ID }}
          FIREBASE_SECRETS_AUTH_URI: ${{ secrets.FIREBASE_SECRETS_AUTH_URI }}
          FIREBASE_SECRETS_TOKEN_URI: ${{ secrets.FIREBASE_SECRETS_TOKEN_URI }}
          FIREBASE_SECRETS_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_SECRETS_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_SECRETS_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_SECRETS_CLIENT_X509_CERT_URL }}
        run: |
          echo -e "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}\n@feuertiger:registry=https://npm.pkg.github.com/feuertiger\npackage-lock=false" > .npmrc
          npm i --no-package-lock
          npm run createSecrets
          npm run deploy:ci
