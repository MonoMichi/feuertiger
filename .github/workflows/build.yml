name: Continuous Integration

on: [push]

jobs:
  prepare_dev_environment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish dev-environment to github package registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: feuertiger/feuertiger-dev-environment
          cache_froms: feuertiger/feuertiger-dev-environment:latest
          tags: latest
          dockerfile: .dev-env.Dockerfile
  build_and_publish:
    needs: prepare_dev_environment
    runs-on: ubuntu-latest
    container:
      image: feuertiger/feuertiger-dev-environment:latest
    steps:
      - uses: actions/checkout@master
      - name: Install
        run: yarn
      - name: Build
        run: |
          yarn build
      - name: Format & Lint & Fix
        run: |
          yarn format
          yarn lint
          git commit -am "format & fix"
      - name: Test
        run: yarn test
      - name: Publish
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          yarn run publish
      - name: Push changes
        if: ${{ failure() || !failure() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  deploy_firebase:
    needs: build_and_publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    container:
      image: feuertiger/feuertiger-dev-environment:latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Firebase
        working-directory: ./deployments/firebase/functions
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_SECRETS_TYPE: ${{ secrets.FIREBASE_SECRETS_TYPE }}
          FIREBASE_SECRETS_PROJECT_ID: ${{ secrets.FIREBASE_SECRETS_PROJECT_ID }}
          FIREBASE_SECRETS_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_SECRETS_PRIVATE_KEY_ID }}
          FIREBASE_SECRETS_PRIVATE_KEY: ${{ secrets.FIREBASE_SECRETS_PRIVATE_KEY }}
          FIREBASE_SECRETS_CLIENT_EMAIL: ${{ secrets.FIREBASE_SECRETS_CLIENT_EMAIL }}
          FIREBASE_SECRETS_CLIENT_ID: ${{ secrets.FIREBASE_SECRETS_CLIENT_ID }}
          FIREBASE_SECRETS_AUTH_URI: ${{ secrets.FIREBASE_SECRETS_AUTH_URI }}
          FIREBASE_SECRETS_TOKEN_URI: ${{ secrets.FIREBASE_SECRETS_TOKEN_URI }}
          FIREBASE_SECRETS_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_SECRETS_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_SECRETS_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_SECRETS_CLIENT_X509_CERT_URL }}
        run: |
          echo -e "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}\n@feuertiger:registry=https://npm.pkg.github.com/feuertiger\npackage-lock=false" > .npmrc
          npm i --no-package-lock
          npm run createSecrets
          npm run deploy:ci
