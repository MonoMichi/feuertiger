type Exercise implements Node {
    id: ID!
    topic: String!
    timeslot: Timeslot
    leaders: PersonConnection
    participants: PersonConnection
}

type ExerciseEdge implements Edge {
    cursor: String!
    node: Exercise
}

type ExerciseConnection implements Connection {
    pageInfo: PageInfo!
    edges: [ExerciseEdge]
}

input Exercise {
    topic: String!
    timeslot: Timeslot
    leaders: PersonConnection
    participants: PersonConnection
}

extend type Mutation {
    createExercise(exercise: Exercise!): Exercise
    updateExercise(exercise: Exercise!): Exercise
    addLeadersToExercise(exerciseId: ID!, personId: [ID]!): boolean
    addParticipantsToExercise(exerciseId: ID!, personId: [ID]!): boolean
    removeLeadersFromExercise(exerciseId: ID!, personId: [ID]!): boolean
    removeParticipantsFromExercise(exerciseId: ID!, personId: [ID]!): boolean
}
