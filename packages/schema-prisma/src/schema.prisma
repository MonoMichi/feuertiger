datasource postgresql {
  url      = env("POSTGRES_URI")
  provider = "postgresql"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  output        = "../dist"
}

model Exercise {
  id           String   @id
  topic        String
  timeslot     Timeslot @relation(fields: [timeslotId], references: [id])
  timeslotId   String
  leaders      Person[] @relation("Exercise_Leader", references: [id])
  participants Person[] @relation("Exercise_Participant", references: [id])
}

model Address {
  id           String   @id
  street       String
  streetNumber String
  postalCode   String
  city         String
  country      String
  lat          Float?
  long         Float?
}

enum Grade {
  FA
  FM
  OFM
  HFM
  LM
  OLM
  HLM
  BM
  OBM
  HBM
}

enum Sex {
  MALE
  FEMALE
  DIVERSE
}

model Promotion {
  id              String   @id
  dateOfPromotion DateTime
  personId        String
  person          Person   @relation("Person_Promotion", fields: [personId])
  grade           Grade
}

model Person {
  id                    String                 @id
  firstname             String
  lastname              String
  sex                   Sex
  phone                 String
  birthName             String
  placeOfBirth          String
  avatar                String
  dateOfBirth           DateTime
  membershipNumber      String
  addressId             String
  address               Address                @relation(fields: [addressId], references: [id])
  memberships           DepartmentMembership[] @relation("Person_DepartmentMembership")
  promotions            Promotion[]            @relation("Person_Promotion")
  exercisesParticipated Exercise[]             @relation("Exercise_Participant", references: [id])
  exercisesLeaded       Exercise[]             @relation("Exercise_Leader", references: [id])
  User                  User[]
}

model Timeslot {
  id       String     @id
  start    DateTime
  end      DateTime
  exercise Exercise[]
}

enum UserRole {
  USER
  ADMIN
}

enum DepartmentUserRole {
  GUEST
  ADMIN
}

model Department {
  id                String                 @id
  name              String
  federation        String?
  phone             String?
  email             String?
  homepage          String?
  addressId         String
  address           Address                @relation(fields: [addressId], references: [id])
  memberships       DepartmentMembership[] @relation("Department_DepartmentMembership")
  membershipRequest MembershipRequest[]
  membershipInvite  MembershipInvite[]
}

model DepartmentMembership {
  id            String               @id
  active        Boolean
  entryDate     DateTime
  departureDate DateTime?
  userRoles     DepartmentUserRole[]
  personId      String
  person        Person               @relation("Person_DepartmentMembership", fields: [personId])
  userId        String?
  user          User?                @relation("User_DepartmentMembership", fields: [userId])
  departmentId  String
  department    Department           @relation("Department_DepartmentMembership", fields: [departmentId])
}

model User {
  id                    String                 @id
  uid                   String
  firstname             String?
  lastname              String?
  personId              String?
  person                Person?                @relation(fields: [personId], references: [id])
  departmentMemberships DepartmentMembership[] @relation("User_DepartmentMembership")
  userRoles             UserRole[]
  MembershipRequest     MembershipRequest[]
}

model MembershipRequest {
  id           String     @id
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id])
}

model MembershipInvite {
  id           String     @id
  email        String
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id])
}