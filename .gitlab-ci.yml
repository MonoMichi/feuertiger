stages:
    - .pre
    - build
    - deploy

variables:
    GIT_CLONE_PATH: $CI_BUILDS_DIR/workspaces/feuertiger
    DEV_ENVIRONMENT_IMAGE_TAG: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/dev-environment:latest
    GOOGLE_CREDENTIALS: ${GOOGLE_CREDENTIALS}
    FIREBASE_CONFIG: ${FIREBASE_CONFIG}
    DIGITALOCEAN_TOKEN: ${DIGITALOCEAN_TOKEN}
    GIT_TOKEN: ${CI_TOKEN}
    GIT_USER: ${GITLAB_USER_EMAIL}
    PULUMI_ACCESS_TOKEN: ${PULUMI_ACCESS_TOKEN}

Prepare:
    stage: .pre
    only:
        changes:
            - .dev-env.Dockerfile
    tags:
        - docker
    image: docker:latest
    services:
        - docker:dind
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker pull $DEV_ENVIRONMENT_IMAGE_TAG || true
        - docker build --cache-from $DEV_ENVIRONMENT_IMAGE_TAG -t $DEV_ENVIRONMENT_IMAGE_TAG --file .dev-env.Dockerfile .
        - docker push $DEV_ENVIRONMENT_IMAGE_TAG

Build:
    stage: build
    needs: []
    interruptible: true
    tags:
        - docker
    image: $DEV_ENVIRONMENT_IMAGE_TAG
    services:
        - docker:dind
    before_script:
        - git remote set-url origin ${CI_REPOSITORY_URL}
        - git checkout --track origin/${CI_COMMIT_REF_NAME}
    script:
        - pwd
        - yarn
        - feuertiger init
        - feuertiger build
        - feuertiger lint
        - feuertiger test
        - feuertiger publish
        - feuertiger dockerize

Deploy:
    stage: deploy
    only:
        refs:
            - dev
    needs: ['Build']
    interruptible: true
    tags:
        - docker
    image: $DEV_ENVIRONMENT_IMAGE_TAG
    script:
        - yarn
